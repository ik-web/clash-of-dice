@use 'sass:map';
@use 'sass:color';
@use '@/assets/scss/_vars.scss' as *;

@mixin respond($size) {
    $breakpoints-max: (
        mobile: 480px,
        tablet: 768px,
        laptop: 1024px,
        laptop_l: 1440px,
    );

    $bp: map.get($breakpoints-max, $size);

    @if $bp {
        @media (max-width: $bp) {
            @content;
        }
    } @else {
        @warn "Breakpoint `#{$size}` is not defined.";
    }
}

@mixin auto_grid($size: 290px) {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax($size, 1fr));
    gap: 15px;
}

@mixin scroll_bar($color) {
    &::-webkit-scrollbar {
        width: 5px;
    }
    &::-webkit-scrollbar-track {
        background: $color;
    }
    &::-webkit-scrollbar-thumb {
        background: color.adjust($color, $lightness: -30%);
    }
    &::-webkit-scrollbar-thumb:hover {
        background: color.adjust($color, $lightness: -40%);
    }
}

@mixin word_break {
    white-space: normal;
    word-break: break-word;
    overflow-wrap: break-word;
}

@mixin box_shadow_inset {
    box-shadow: inset 4px 4px 10px rgba(0, 0, 0, 0.3),
        inset -4px -4px 10px rgba(255, 255, 255, 0.05);
}

@mixin box_shadow_raised {
    box-shadow: inset 1px 1px 3px rgba(255, 255, 255, 0.6), inset -2px -2px 5px rgba(0, 0, 0, 0.4);
}

@mixin btn_close($size: 30px, $thickness: 2px, $color: #888) {
    position: absolute;
    top: 5px;
    right: 5px;
    z-index: 10;
    width: $size;
    height: $size;
    background: transparent;
    border: none;
    padding: 0;
    cursor: pointer;
    transition: transform $transition;

    &::before,
    &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: $size * 0.5;
        height: $thickness;
        background-color: $color;
        transform-origin: center;
    }

    &::before {
        transform: translate(-50%, -50%) rotate(45deg);
    }

    &::after {
        transform: translate(-50%, -50%) rotate(-45deg);
    }

    &:hover {
        transform: rotate(180deg) scale(1.2);
    }

    &:focus {
        outline: none;
    }
}

@mixin drawer_body {
    display: flex;
    flex-direction: column;
    width: 50vw;
    height: 100%;
    padding: 0 40px;
    gap: 40px;

    @include respond(laptop) {
        width: 100vw;
    }

    @include respond(mobile) {
        padding: 0 15px;
    }
}

@mixin drawer_footer($cols: 2) {
    display: grid;
    grid-template-columns: repeat($cols, minmax(100px, 200px));
    justify-content: center;
    gap: 15px;
    width: 100%;
}

@mixin card_size($card_width) {
    $padding: 10px;
    $screen_size: $card_width - ($padding * 2);

    width: $card_width;
    padding: $padding;

    &__screen {
        @include box_shadow_inset;
        width: $screen_size;
        height: $screen_size;
        padding: 3px;
    }
}
